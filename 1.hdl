//this is the correct verilog code,

module FSM(quarter, nickel, dime, soda, diet,clk, reset, current_state, next_state, change_count, give_soda, give_diet);
input quarter, nickel, dime, soda, diet,clk, reset;
output [3:0] current_state; 
 output next_state, change_count, give_soda, give_diet;
reg current_state, change_count, next_state, give_soda, give_diet;
parameter cent0 = 0, cent5= 1, cent10 = 2, cent15=3, cent20 =4, cent25 =5, cent30=6,cent35=7,cent40=8;

always @(posedge clk or posedge reset)
    begin
        if(reset)
            current_state = cent0;
        else
            current_state = next_state;
    end

always @(nickel or dime or quarter)
    begin
    case(current_state)
        cent0: begin
            if(nickel)  
                    next_state = cent5;
            else if(dime)
                    next_state = cent10;
            else if(quarter)
                    next_state = cent25;
            end
        cent5: begin
            if(nickel)  
                    next_state = cent10;
            else if(dime)
                    next_state = cent15;
            else if(quarter)
                    next_state = cent30;
            end
        cent10: begin
            if(nickel)  
                    next_state = cent15;
            else if(dime)
                    next_state = cent20;
            else if(quarter)
                    next_state = cent35;
            end
        cent15: begin
            if(nickel)  
                    next_state = cent20;
            else if(dime)
                    next_state = cent25;
            else if(quarter)
                    next_state = cent40;
            end
        cent20: begin
            if(nickel)  
                    next_state = cent25;
            else if(dime)
                    next_state = cent30;
            else if(quarter)
                    next_state = cent0;
                    if(soda)    
                            give_soda = 1;
                    else if(diet)
                            give_diet = 1;
            end
            cent25: begin
                if(nickel)  
                        next_state = cent30;
                else if(dime)
                        next_state = cent35;
                else if(quarter)
                        next_state = cent0;
                        change_count = 1;
                        if(soda)    
                                give_soda = 1;
                        else if(diet)
                                give_diet = 1;
                end
            cent30: begin
                if(nickel)
                        next_state = cent35;
                else if(dime)
                        next_state = cent40;
                else if(quarter)
                        next_state = cent0;
                        change_count = 2;
                        if(soda)    
                                give_soda = 1;
                        else if(diet)
                                give_diet = 1;
                end
            cent35: begin
                if(nickel)
                        next_state = cent40;
                else if(dime)
                        next_state = cent40;
                else if(quarter)
                        next_state = cent0;
                        change_count = 2;
                        if(soda)
                                give_soda = 1;
                        else if(diet)
                                give_diet = 1;
                end
            cent40: begin
                if(nickel)
                        next_state = cent0;
                        if(soda)
                                give_soda = 1;
                        else if(diet)
                                give_diet = 1;
                else if(dime)
                        next_state = cent0;
                        change_count = 1;
                        if(soda)
                                give_soda = 1;
                        else if(diet)
                                give_diet = 1;
                else if(quarter)
                        next_state = cent0;
                        change_count = 4;
                        if(soda)
                                give_soda = 1;
                        else if(diet)
                                give_diet = 1;
                end
            default: next_state = current_state;
            endcase
end
